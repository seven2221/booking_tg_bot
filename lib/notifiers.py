import sqlite3
from datetime import datetime

def notify_subscribers_for_cancellation(group, bot):
    conn = sqlite3.connect('bookings.db')
    cursor = conn.cursor()
    ids = group["ids"]
    cursor.execute("SELECT date, time, subscribed_users FROM slots WHERE id IN ({})".format(','.join('?' * len(ids))), ids)
    results = cursor.fetchall()
    if not results:
        print("[Error] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö ID.")
        return
    dates = set(row[0] for row in results)
    selected_date = list(dates)[0] if dates else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞"
    users_to_notify = {}
    for _, time, subs_str in results:
        if not subs_str:
            continue
        for user_id in subs_str.split(','):
            user_id = user_id.strip()
            if not user_id:
                continue
            if user_id not in users_to_notify:
                users_to_notify[user_id] = []
            users_to_notify[user_id].append(time)
    for user_id, times in users_to_notify.items():
        try:
            formatted_date = datetime.strptime(selected_date, "%Y-%m-%d").strftime("%d.%m.%Y")
            time_list = "\n".join(sorted(set(times)))
            message = f"üîî –£ –Ω–∞—Å –æ—Å–≤–æ–±–æ–¥–∏–ª–æ—Å—å –≤—Ä–µ–º—è!\n{formatted_date}:\n{time_list}"
            bot.send_message(int(user_id), message)
        except Exception as e:
            print(f"[Error] Can't notify user {user_id}: {e}")
    conn.close()
    
def notify_booking_cancelled(user_id, bot, group_name=None, start_time=None, end_time=None, date_formatted=None):
    try:
        message = (f"‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –±—ã–ª–∏ –≤—ã–Ω—É–∂–¥–µ–Ω—ã –æ—Ç–º–µ–Ω–∏—Ç—å –≤–∞—à—É –±—Ä–æ–Ω—å –¥–ª—è –≥—Ä—É–ø–ø—ã \n*{group_name}*\n{date_formatted} —Å {start_time} –ø–æ {end_time}\n–ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º.\n–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.\n–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º: @cyberocalypse")
        bot.send_message(int(user_id), message.strip(), parse_mode='Markdown')
    except Exception as e:
        print(f"[Error] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")